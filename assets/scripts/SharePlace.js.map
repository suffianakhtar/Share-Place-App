{"version":3,"file":"SharePlace.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://my-place/./src/UI/Map.js","webpack://my-place/./src/UI/Modal.js","webpack://my-place/./src/Utility/Location.js","webpack://my-place/webpack/bootstrap","webpack://my-place/webpack/runtime/define property getters","webpack://my-place/webpack/runtime/hasOwnProperty shorthand","webpack://my-place/webpack/runtime/make namespace object","webpack://my-place/./src/SharePlace.js"],"sourcesContent":["export default function renderMap(coordinates) {\r\n  if (typeof ol === 'undefined') {\r\n    alert('Could not load maps library - please try again later!');\r\n  }\r\n\r\n  new ol.Map({\r\n    target: 'map',\r\n    layers: [\r\n      new ol.layer.Tile({\r\n        source: new ol.source.OSM()\r\n      })\r\n    ],\r\n    view: new ol.View({\r\n      center: ol.proj.fromLonLat([coordinates.lng, coordinates.lat]),\r\n      zoom: 16\r\n    })\r\n  });\r\n}\r\n","function showModal(contentId) {\r\n  const contentTemplateElement = document.getElementById(contentId);\r\n  const modalTemplateElement = document.getElementById('modal-template');\r\n  const modalElements = document.importNode(modalTemplateElement.content, true);\r\n  const backdropElement = modalElements.querySelector('.backdrop');\r\n  const modalElement = modalElements.querySelector('.modal');\r\n  const contentElement = document.importNode(contentTemplateElement.content, true);\r\n  modalElement.append(contentElement);\r\n  document.body.prepend(backdropElement, modalElement);\r\n}\r\n\r\nfunction hideModal() {\r\n  const backdropElement = document.querySelector('.backdrop');\r\n  const modalElement = document.querySelector('.modal');\r\n  backdropElement.remove();\r\n  modalElement.remove();\r\n};\r\n\r\nexport { showModal, hideModal };\r\n","export async function getCoordsFromAddress(address) {\r\n  const urlAddress = encodeURI(address);\r\n  const response = await fetch(\r\n    `http://nominatim.openstreetmap.org/search?format=json&q=${urlAddress}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch coordinates. Please try again!');\r\n  }\r\n\r\n  const data = await response.json();\r\n\r\n  if (data.length === 0) {\r\n    throw new Error('Place not found. Please enter a valid address!');\r\n  }\r\n\r\n  return {\r\n    lat: data[0].lat,\r\n    lng: data[0].lon\r\n  };\r\n}\r\n\r\nexport async function getAddressFromCoords(coords) {\r\n  const response = await fetch(\r\n    `http://nominatim.openstreetmap.org/reverse?format=json&lon=${coords.lng}&lat=${coords.lat}`\r\n  );\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch address. Please try again!');\r\n  }\r\n\r\n  const data = await response.json();\r\n  const address = data.display_name;\r\n  return address;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { showModal, hideModal } from './UI/Modal';\r\nimport { getAddressFromCoords, getCoordsFromAddress } from './Utility/Location';\r\nimport renderMap from './UI/Map';\r\n\r\nconst locateUserBtn = document.getElementById('locate-btn');\r\nconst addressForm = document.getElementById('address-form');\r\nconst shareBtn = document.getElementById('share-btn');\r\n\r\nlocateUserBtn.addEventListener('click', locateUserHandler);\r\naddressForm.addEventListener('submit', findAddressHandler);\r\nshareBtn.addEventListener('click', sharePlaceHandler);\r\n\r\nfunction locateUserHandler() {\r\n  if (!navigator.geolocation) {\r\n    alert('Location feature is not available in browser - please use a modern browser or manually enter an address!');\r\n    return;\r\n  }\r\n  showModal('loading-modal-content');\r\n  navigator.geolocation.getCurrentPosition(\r\n    async successResult => {\r\n      const coordinates = { lat: successResult.coords.latitude, lng: successResult.coords.longitude };\r\n      const address = await getAddressFromCoords(coordinates);\r\n      selectPlace(coordinates, address);\r\n      hideModal();\r\n    },\r\n    error => {\r\n      hideModal();\r\n      alert('Failed to fetch location. Reason: ' + error.message + ' Please enter address manually!');\r\n    }\r\n  );\r\n}\r\n\r\nasync function findAddressHandler(event) {\r\n  event.preventDefault();\r\n  const address = event.target.querySelector('input').value;\r\n  if (!address || address.trim() === '') {\r\n    alert('Invalid address entered - please try again!');\r\n    return;\r\n  }\r\n  showModal('loading-modal-content');\r\n  try {\r\n    const coordinates = await getCoordsFromAddress(address);\r\n    selectPlace(coordinates, address);\r\n  } catch (err) {\r\n    alert(err.message);\r\n  }\r\n  hideModal();\r\n}\r\n\r\nfunction sharePlaceHandler() {\r\n  const sharedLinkInputElement = document.getElementById('share-link');\r\n  location.assign(sharedLinkInputElement.value);\r\n}\r\n\r\nfunction selectPlace(coordinates, address) {\r\n  const mapDiv = document.getElementById('map');\r\n  mapDiv.innerHTML = '';\r\n  renderMap(coordinates);\r\n  shareBtn.removeAttribute('disabled');\r\n  const sharedLinkInputElement = document.getElementById('share-link');\r\n  sharedLinkInputElement.value = `${location.origin}/my-place/index.html?address=${encodeURI(address)}&lat=${\r\n    coordinates.lat\r\n  }&lng=${coordinates.lng}`;\r\n}\r\n"],"names":[],"sourceRoot":""}